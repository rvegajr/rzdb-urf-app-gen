
using System;
using System.Collections.Generic;
using Repository.Pattern.Ef6;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.Spatial;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace DataAccess.Models
{
    /// <summary></summary>
    [Table("Invoices")]
    public partial class Invoice : Entity
    {

        /// <summary></summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Invoice()
        {
             this.CustomerTransactions_InvoiceID = new HashSet<CustomerTransaction>();
             this.InvoiceLines_InvoiceID = new HashSet<InvoiceLine>();
             this.StockItemTransactions_InvoiceID = new HashSet<StockItemTransaction>();
        }
        /// <summary></summary>
		
        [Key] public int InvoiceID { get; set; }
        /// <summary></summary>
		
        public int CustomerID { get; set; }
        /// <summary></summary>
		
        public int BillToCustomerID { get; set; }
        /// <summary></summary>
		
        public int? OrderID { get; set; }
        /// <summary></summary>
		
        public int DeliveryMethodID { get; set; }
        /// <summary></summary>
		
        public int ContactPersonID { get; set; }
        /// <summary></summary>
		
        public int AccountsPersonID { get; set; }
        /// <summary></summary>
		
        public int SalespersonPersonID { get; set; }
        /// <summary></summary>
		
        public int PackedByPersonID { get; set; }
        /// <summary></summary>
		
        public DateTime InvoiceDate { get; set; }
        /// <summary></summary>
		
        public string CustomerPurchaseOrderNumber { get; set; }
        /// <summary></summary>
		
        public bool IsCreditNote { get; set; }
        /// <summary></summary>
		
        public string CreditNoteReason { get; set; }
        /// <summary></summary>
		
        public string Comments { get; set; }
        /// <summary></summary>
		
        public string DeliveryInstructions { get; set; }
        /// <summary></summary>
		
        public string InternalComments { get; set; }
        /// <summary></summary>
		
        public int TotalDryItems { get; set; }
        /// <summary></summary>
		
        public int TotalChillerItems { get; set; }
        /// <summary></summary>
		
        public string DeliveryRun { get; set; }
        /// <summary></summary>
		
        public string RunPosition { get; set; }
        /// <summary></summary>
		
        public string ReturnedDeliveryData { get; set; }
        /// <summary></summary>
		
        public DateTime? ConfirmedDeliveryTime { get; set; }
        /// <summary></summary>
		
        public string ConfirmedReceivedBy { get; set; }
        /// <summary></summary>
		
        public int LastEditedBy { get; set; }
        /// <summary></summary>
		
        public DateTime LastEditedWhen { get; set; }
        /// <summary></summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<CustomerTransaction> CustomerTransactions_InvoiceID { get; set; }
            
        /// <summary></summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<InvoiceLine> InvoiceLines_InvoiceID { get; set; }
            
        /// <summary></summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<StockItemTransaction> StockItemTransactions_InvoiceID { get; set; }
            
    /// <summary></summary>        
        [ForeignKey("DeliveryMethodID")]

        public virtual DeliveryMethod DeliveryMethod { get; set; }
    /// <summary></summary>
        [ForeignKey("CustomerID")]

        public virtual Customer Customer { get; set; }
    /// <summary></summary>        
        [ForeignKey("OrderID")]

        public virtual Order Order { get; set; }
    /// <summary></summary>
        [ForeignKey("AccountsPersonID")]

        public virtual Person AccountsPerson { get; set; }
    /// <summary></summary>
        [ForeignKey("LastEditedBy")]

        public virtual Person LastEditedByPerson { get; set; }
    /// <summary></summary>
        [ForeignKey("ContactPersonID")]

        public virtual Person ContactPerson { get; set; }
    /// <summary></summary>
        [ForeignKey("PackedByPersonID")]

        public virtual Person PackedByPerson { get; set; }
    /// <summary></summary>
        [ForeignKey("SalespersonPersonID")]

        public virtual Person SalespersonPerson { get; set; }
    /// <summary></summary>
        [ForeignKey("BillToCustomerID")]

        public virtual Customer BillToCustomer { get; set; }

    }
}
