
using System;
using System.Collections.Generic;
using Repository.Pattern.Ef6;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.Spatial;
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace DataAccess.Models
{
    /// <summary></summary>
    [Table("Orders", Schema = "Sales")]
    public partial class Order : Entity
    {

        /// <summary></summary>
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Order()
        {
             this.Invoices_OrderID = new HashSet<Invoice>();
             this.OrderLines_OrderID = new HashSet<OrderLine>();
             this.Orders_BackorderOrderID = new HashSet<Order>();
        }
        /// <summary></summary>
		
        [Key] public int OrderID { get; set; }
        /// <summary></summary>
		
        public int CustomerID { get; set; }
        /// <summary></summary>
		
        public int SalespersonPersonID { get; set; }
        /// <summary></summary>
		
        public int? PickedByPersonID { get; set; }
        /// <summary></summary>
		
        public int ContactPersonID { get; set; }
        /// <summary></summary>
		
        public int? BackorderOrderID { get; set; }
        /// <summary></summary>
		
        public DateTime OrderDate { get; set; }
        /// <summary></summary>
		
        public DateTime ExpectedDeliveryDate { get; set; }
        /// <summary></summary>
		
        public string CustomerPurchaseOrderNumber { get; set; }
        /// <summary></summary>
		
        public bool IsUndersupplyBackordered { get; set; }
        /// <summary></summary>
		
        public string Comments { get; set; }
        /// <summary></summary>
		
        public string DeliveryInstructions { get; set; }
        /// <summary></summary>
		
        public string InternalComments { get; set; }
        /// <summary></summary>
		
        public DateTime? PickingCompletedWhen { get; set; }
        /// <summary></summary>
		
        public int LastEditedBy { get; set; }
        /// <summary></summary>
		
        public DateTime LastEditedWhen { get; set; }
        /// <summary></summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<Invoice> Invoices_OrderID { get; set; }
            
        /// <summary></summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<OrderLine> OrderLines_OrderID { get; set; }
            
        /// <summary></summary> 
         [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")] 
         public virtual ICollection<Order> Orders_BackorderOrderID { get; set; }
            
    /// <summary></summary>        
        [ForeignKey("CustomerID")]

        public virtual Customer Customer { get; set; }
    /// <summary></summary>
        [ForeignKey("LastEditedBy")]

        public virtual Person LastEditedByPerson { get; set; }
    /// <summary></summary>
        [ForeignKey("ContactPersonID")]

        public virtual Person ContactPerson { get; set; }
    /// <summary></summary>
        [ForeignKey("PickedByPersonID")]

        public virtual Person PickedByPerson { get; set; }
    /// <summary></summary>
        [ForeignKey("SalespersonPersonID")]

        public virtual Person SalespersonPerson { get; set; }
    /// <summary></summary>
        [ForeignKey("BackorderOrderID")]

        public virtual Order BackorderOrder { get; set; }

    }
}
