
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Linq;
using System.Web.OData;
using System.Web.OData.Query;
using System.Web.OData.Routing;
using Repository.Pattern.UnitOfWork;
using System.Web.Http;
using System.Threading.Tasks;
using System.Net;
using Repository.Pattern.Infrastructure;
using System.Data.Entity.Infrastructure;
using DataAccess.Models;
using Service;
using System;

namespace WebApi.Controllers
{
        /// <summary></summary>
        [ODataRoutePrefix("VwVehicleTemperatures")]
        public partial class VwVehicleTemperaturesController : ODataController
        {
            private readonly IVwVehicleTemperatureService _service;
            private readonly IUnitOfWorkAsync _unitOfWorkAsync;
    
            /// <summary></summary>
            public VwVehicleTemperaturesController( 
                IUnitOfWorkAsync unitOfWorkAsync,
                IVwVehicleTemperatureService service)
            {
                _unitOfWorkAsync = unitOfWorkAsync;
                _service = service;
            }
    
            /// <summary></summary>
            [HttpGet]
            [ODataRoute]
            [EnableQuery]
            public IQueryable<VwVehicleTemperature> GetVwVehicleTemperatures()
            {
                return _service.Queryable();
            }
    
            /// <summary></summary>
            [HttpGet]
            [ODataRoute]
            [EnableQuery]
            public SingleResult<VwVehicleTemperature> GetVwVehicleTemperatureFromId( [FromODataUri] System.Int64 VehicleTemperatureID, [FromODataUri] string VehicleRegistration, [FromODataUri] int ChillerSensorNumber, [FromODataUri] DateTime RecordedWhen, [FromODataUri] decimal Temperature)
            {
                return SingleResult.Create(_service.Queryable().Where(t =>  t.VehicleTemperatureID==VehicleTemperatureID && t.VehicleRegistration==VehicleRegistration && t.ChillerSensorNumber==ChillerSensorNumber && t.RecordedWhen==RecordedWhen && t.Temperature==Temperature ));
            }
    
            /// <summary></summary>
            [HttpGet]
            [ODataRoute("( VehicleTemperatureID={VehicleTemperatureID}, VehicleRegistration={VehicleRegistration}, ChillerSensorNumber={ChillerSensorNumber}, RecordedWhen={RecordedWhen}, Temperature={Temperature})")]
            [EnableQuery]
            public SingleResult<VwVehicleTemperature> GetVwVehicleTemperature( [FromODataUri] System.Int64 VehicleTemperatureID, [FromODataUri] string VehicleRegistration, [FromODataUri] int ChillerSensorNumber, [FromODataUri] DateTime RecordedWhen, [FromODataUri] decimal Temperature)
            {
                return SingleResult.Create(_service.Queryable().Where(t =>  t.VehicleTemperatureID==VehicleTemperatureID && t.VehicleRegistration==VehicleRegistration && t.ChillerSensorNumber==ChillerSensorNumber && t.RecordedWhen==RecordedWhen && t.Temperature==Temperature ));
            }

        }
}
